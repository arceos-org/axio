var searchIndex = new Map(JSON.parse('[["axio",{"t":"PPPPKFPPPPPPGPPPPPPPPPPFKPIKGPPPPPKPNNNNNNNNNNNNNNNNNNNNNMNNHNNMNMNNNNNNNNNNNNNNNNNCMNNNNNNNNNONMNNNNNNNNNNNNNNNNNNOMNNEEEE","n":["AddrInUse","AlreadyExists","BadAddress","BadState","BufRead","BufReader","ConnectionRefused","ConnectionReset","Current","DirectoryNotEmpty","End","Err","Error","InvalidData","InvalidInput","Io","IsADirectory","NoMemory","NotADirectory","NotConnected","NotFound","Ok","PermissionDenied","PollState","Read","ResourceBusy","Result","Seek","SeekFrom","Start","StorageFull","UnexpectedEof","Unsupported","WouldBlock","Write","WriteZero","as_str","borrow","","","","borrow_mut","","","","buffer","capacity","clone","","","clone_into","","","clone_to_uninit","","","code","consume","","default","default_read_to_end","eq","","fill_buf","","flush","fmt","","","","from","","","","get_mut","get_ref","has_data_left","into","","","","into_inner","new","prelude","read","","read_exact","","read_line","read_to_end","","read_to_string","","read_until","readable","rewind","seek","stream_position","to_owned","","","to_string","try_from","","","","","try_into","","","","type_id","","","","writable","write","write_all","write_fmt","BufRead","Read","Seek","Write"],"q":[[0,"axio"],[119,"axio::prelude"],[123,"axio::buffered::bufreader"],[124,"alloc::vec"],[125,"core::option"],[126,"core::marker"],[127,"core::fmt"],[128,"core::result"],[129,"alloc::string"],[130,"core::any"]],"i":"b000``00Ab10Bb`2222222202``2```12222`22j2Ad41304113043043044Aj21`4502Bh52663526331352633`Al4402404023Cd00748857488574857484222````","f":"````````````````````````````````````{{{d{b}}}{{d{f}}}}{d{{d{c}}}{}}000{{{d{h}}}{{d{hc}}}{}}000{{{d{{j{c}}}}}{{d{{n{l}}}}}{}}{{{d{{j{c}}}}}A`{}}{{{d{Ab}}}Ab}{{{d{Ad}}}Ad}{{{d{b}}}b}{{d{d{hc}}}Af{}}00{{dl}Af}00{bAh}{{{d{hAj}}A`}Af}{{{d{h{j{c}}}}A`}AfAl}{{}Ad}{{{d{hc}}{d{h{An{l}}}}{B`{A`}}}{{Bb{A`}}}{AlBd}}{{{d{Ab}}{d{Ab}}}Bf}{{{d{b}}{d{b}}}Bf}{{{d{hAj}}}{{Bb{{d{{n{l}}}}}}}}{{{d{h{j{c}}}}}{{Bb{{d{{n{l}}}}}}}Al}{{{d{hBh}}}Bb}{{{d{Ab}}{d{hBj}}}Bl}{{{d{Ad}}{d{hBj}}}Bl}{{{d{b}}{d{hBj}}}{{C`{AfBn}}}}0{cc{}}000{{{d{h{j{c}}}}}{{d{hc}}}{}}{{{d{{j{c}}}}}{{d{c}}}{}}{{{d{hAj}}}{{Bb{Bf}}}}{{}c{}}000{{{j{c}}}c{}}{c{{j{c}}}Al}`{{{d{hAl}}{d{h{n{l}}}}}{{Bb{A`}}}}{{{d{h{j{c}}}}{d{h{n{l}}}}}{{Bb{A`}}}Al}{{{d{h{j{c}}}}{d{h{n{l}}}}}{{Bb{Af}}}Al}{{{d{hAl}}{d{h{n{l}}}}}Bb}{{{d{hAj}}{d{hCb}}}{{Bb{A`}}}}{{{d{h{j{c}}}}{d{h{An{l}}}}}{{Bb{A`}}}Al}{{{d{hAl}}{d{h{An{l}}}}}{{Bb{A`}}}}{{{d{h{j{c}}}}{d{hCb}}}{{Bb{A`}}}Al}{{{d{hAl}}{d{hCb}}}{{Bb{A`}}}}{{{d{hAj}}l{d{h{An{l}}}}}{{Bb{A`}}}}{AdBf}{{{d{hCd}}}{{Bb{Af}}}}{{{d{hCd}}Ab}{{Bb{Cf}}}}{{{d{hCd}}}{{Bb{Cf}}}}{dc{}}00{dCb}{c{{C`{e}}}{}{}}00{Ah{{C`{b}}}}1{{}{{C`{c}}}{}}000{dCh}0009{{{d{hBh}}{d{{n{l}}}}}{{Bb{A`}}}}{{{d{hBh}}{d{{n{l}}}}}Bb}{{{d{hBh}}Cj}{{Bb{Af}}}}````","D":"Ib","p":[[6,"Error",0],[1,"reference",null,null,1],[1,"str"],[0,"mut"],[5,"BufReader",0,123],[1,"u8"],[1,"slice"],[1,"usize"],[6,"SeekFrom",0],[5,"PollState",0],[1,"unit"],[1,"i32"],[10,"BufRead",0],[10,"Read",0],[5,"Vec",124],[6,"Option",125,null,1],[8,"Result",0],[10,"Sized",126],[1,"bool"],[10,"Write",0],[5,"Formatter",127],[8,"Result",127],[5,"Error",127],[6,"Result",128,null,1],[5,"String",129],[10,"Seek",0],[1,"u64"],[5,"TypeId",130],[5,"Arguments",127]],"r":[[5,123],[37,123],[41,123],[45,123],[46,123],[58,123],[64,123],[70,123],[74,123],[75,123],[77,123],[81,123],[82,123],[85,123],[86,123],[89,123],[91,123],[102,123],[107,123],[111,123],[119,0],[120,0],[121,0],[122,0]],"b":[[68,"impl-Display-for-AxError"],[69,"impl-Debug-for-AxError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADIACwAmAAcAMAAIADsAAQA+AAEAQQAAAEMAAwBWAAEAWgAAAFwAAABjABAAeAADAA==","P":[[37,"T"],[45,"R"],[47,""],[50,"T"],[53,""],[58,"R"],[59,""],[60,"R"],[61,""],[64,"R"],[65,""],[70,"T"],[74,"R"],[76,""],[77,"U"],[81,"R"],[84,""],[85,"R"],[87,""],[89,"R"],[90,""],[91,"R"],[92,""],[98,"T"],[101,""],[102,"U,T"],[105,""],[106,"U,T"],[107,"U"],[111,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3887]}